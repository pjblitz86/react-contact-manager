{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","_ref","delete","t0","_x","_x2","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","NotFound","Test","title","body","fetch","then","response","json","EditContact","updateContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.184d7d33.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact =>\r\n            contact.id === action.payload.id\r\n              ? (contact = action.payload)\r\n              : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact; // destructuring\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem'\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  // if no props are passed\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  // proptypes enforce types\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    // clear the state after submission\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, the page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  // Testing life-cycle hooks\r\n\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount');\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate');\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log('componentWillUpdate');\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps'); // used with redux mostly, but being deprecated\r\n  // }\r\n\r\n  // static getDerivedStateFromProps(nextProps, nextState) {\r\n  //   // this will be used more instead of componentWillReceiveProps\r\n  //   return null;\r\n  // }\r\n\r\n  // static getSnapshotBeforeUpdate(prevProps, prevState) {} // also new incoming\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // Check for errors\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // clear the state after submission\r\n    this.setState({ name: '', email: '', phone: '', errors: {} });\r\n\r\n    this.props.history.push('/'); // redirect\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}